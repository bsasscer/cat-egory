{"version":3,"sources":["CatLoader.js","Categories.js","CatList.js","App.js","catApi.js","index.js"],"names":["CatLoader","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","props","fetchCat","val","document","getElementById","alert","temp","toLowerCase","saveCat","react_default","a","createElement","className","src","randomCat","alt","onClick","type","id","placeholder","handleSave","bind","resetCats","React","Component","Categories","_this","categories","map","item","name","selectCategory","values","length","CatList","result","activeCategory","find","getCats","App","call","state","assertThisInitialized","setState","ls","get","_this2","axios","then","response","catch","error","console","Promise","reject","data","file","categoryName","found","i","push","newCat","set","log","CatLoader_CatLoader","Categories_Categories","CatList_CatList","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.9f82f5dd.chunk.js","sourcesContent":["import React from 'react';\n\nexport class CatLoader extends React.Component {\n    componentDidMount() {\n        this.props.fetchCat();\n    }\n\n    handleSave() {\n        let val = document.getElementById('category-input').value;\n        if (val === '') {\n            alert('Please enter a category name');\n        } else {\n            let temp = val.toLowerCase();\n            this.props.saveCat(temp);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-8 mx-auto img-holder\">\n                        <img\n                            src={this.props.randomCat}\n                            className=\"img-fluid mx-auto d-block img-holder-inner\"\n                            alt=\"Random cat\"\n                        />\n                    </div>\n                </div>\n                <div className=\"row py-2 justify-content-center\">\n                    <div className=\"col-8 mx-auto\">\n                        <button\n                            onClick={this.props.fetchCat}\n                            className=\"btn btn-outline-primary btn-large float-right\"\n                        >\n                            Next\n                        </button>\n                    </div>\n                </div>\n                <div className=\"row py-2\">\n                    <div className=\"col-8 mx-auto justify-content-space-between\">\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"category-input\"\n                            placeholder=\"Enter category name\"\n                        />\n                        <button\n                            type=\"button\"\n                            onClick={this.handleSave.bind(this)}\n                            className=\"btn btn-outline-primary btn-large float-right\"\n                        >\n                            Save\n                        </button>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-8 mx-auto\">\n                        <button\n                            onClick={this.props.resetCats}\n                            className=\"btn btn-outline-light btn-sm float-right\"\n                        >\n                            Reset\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nexport class Categories extends React.Component {\n    render() {\n        return (\n            <div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-8 category-frame bg-light\">\n                        <ul>\n                            {this.props.categories.map(item => (\n                                <li\n                                    key={item.name}\n                                    onClick={() =>\n                                        this.props.selectCategory(item.name)\n                                    }\n                                >\n                                    <button className=\"btn btn-link\">\n                                        {item.name}\n                                    </button>\n                                    <span className=\"category-count\">\n                                        {item.values.length}\n                                    </span>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nexport class CatList extends React.Component {\n    getCats() {\n        let result = [];\n        if (\n            this.props.activeCategory !== '' &&\n            this.props.activeCategory !== null\n        ) {\n            let cat = this.props.categories.find(\n                item => item.name === this.props.activeCategory\n            );\n            result = cat.values;\n        }\n        return result;\n    }\n\n    render() {\n        return (\n            <div className=\"row justify-content-center\">\n                <div className=\"col-8 category-frame\">\n                    <div className=\"row\">\n                        <div className=\"col-6 py-3\">\n                            <h3>\n                                {this.props.activeCategory ||\n                                    'Select a category'}\n                            </h3>\n                        </div>\n                        <div className=\"col-6 py-3 text-right\">\n                            <h3>{this.getCats().length}</h3>\n                        </div>\n                    </div>\n                    <div className=\"cat-container\">\n                        <div className=\"row mx-auto outer-catlist\">\n                            <div className=\"inner-catlist d-flex flex-wrap flex-sm-column justify-content-between\">\n                                {this.getCats().map(item => (\n                                    <div key={item} className=\"col cat-item\">\n                                        <img\n                                            src={item}\n                                            alt=\"Awesome cat\"\n                                            className=\"catlist-img\"\n                                        />\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport ls from 'local-storage';\nimport './App.css';\nimport { CatLoader } from './CatLoader';\nimport { Categories } from './Categories';\nimport { CatList } from './CatList';\nimport { fetchRandomCat } from './catApi';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomCat: '',\n            categories: [],\n            activeCategory: ''\n        };\n        this.fetchCat = this.fetchCat.bind(this);\n        this.saveCat = this.saveCat.bind(this);\n        this.resetCats = this.resetCats.bind(this);\n        this.selectCategory = this.selectCategory.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            randomCat: ls.get('currentCat') || '',\n            categories: ls.get('savedCategories') || [],\n            activeCategory: ls.get('selectedCategory')\n        });\n    }\n\n    fetchCat() {\n        fetchRandomCat().then(result => {\n            this.setState({\n                randomCat: result.data.file\n            });\n        });\n    }\n\n    saveCat(categoryName) {\n        let temp = this.state.categories;\n        let found = false;\n        for (let i = 0; i < temp.length; i++) {\n            if (temp[i].name === categoryName) {\n                found = true;\n                temp[i].values.push(this.state.randomCat);\n                break;\n            }\n        }\n        if (!found) {\n            const newCat = {\n                name: categoryName,\n                values: [this.state.randomCat]\n            };\n            temp.push(newCat);\n        }\n        this.setState({\n            categories: temp\n        });\n        ls.set('savedCategories', temp);\n    }\n\n    resetCats() {\n        this.setState({\n            categories: [],\n            activeCategory: ''\n        });\n        ls.set('savedCategories', []);\n        ls.set('selectedCategory', '');\n    }\n\n    selectCategory(categoryName) {\n        console.log(categoryName);\n        this.setState({\n            activeCategory: categoryName\n        });\n        ls.set('selectedCategory', categoryName);\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h2>Cat-egory</h2>\n                <CatLoader\n                    randomCat={this.state.randomCat}\n                    categories={this.state.categories}\n                    fetchCat={this.fetchCat}\n                    saveCat={this.saveCat}\n                    resetCats={this.resetCats}\n                />\n                <Categories\n                    categories={this.state.categories}\n                    selectCategory={this.selectCategory}\n                />\n                <CatList\n                    categories={this.state.categories}\n                    activeCategory={this.state.activeCategory}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import axios from 'axios';\n\nexport function fetchRandomCat() {\n    // TODO - fetch json from the http://aws.random.cat/meow or a similar random cat API\n    const request = axios.get('http://aws.random.cat/meow');\n    return request\n        .then(response => {\n            return response;\n        })\n        .catch(error => {\n            console.error(error);\n            return Promise.reject(error);\n        });\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}